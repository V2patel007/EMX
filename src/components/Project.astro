---
const images = [
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/450kg_Conveyor_Design_and_Install%20(1).jpg?updatedAt=1758215629556" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/Custom_Design_and_Fabrication.jpg?updatedAt=1758215509014" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/CustomSSControlPanel.jpg?updatedAt=1758215514181" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/Enclosure.jpg?updatedAt=1758215513660" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/EndOftheArmTool.jpg?updatedAt=1758215515168" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/GeneralManf1.jpg?updatedAt=1758215504021" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/GeneralManf3.jpg?updatedAt=1758215508387" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/IMG_6107.jpg?updatedAt=1758215503642" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/GenralManf6.jpg?updatedAt=1758215513890" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/GPU1.jpg?updatedAt=1758215513492" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/WhatsApp%20Image%202025-09-19%20at%2000.18.15_c39b491f.jpg?updatedAt=1758221344146"},
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/SheetMetal_Fabrication.jpg?updatedAt=1758215508494" },
  { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/SheetMetal2.jpg?updatedAt=1758215508581" },
  // { src: "https://ik.imagekit.io/kghr7h1un/New%20Img/IMG_4742.jpg?updatedAt=1758215503733" },
];
---

<div class="grid-container" id="portfolio">
  <div class="grid-header">
    <h2>Media Gallery</h2>
  </div>

  <div class="uneven-grid">
    {images.map((image, index) => (
      <div
        class={`uneven-grid-item item-${index + 1}`}
        data-src={image.src}
        key={index}
      >
        <img
          src={`${image.src}&tr=w-1200,f-auto,q-auto`}
          alt=""
          loading="lazy"
        />
        <div class="view-icon" aria-hidden="true">üëÅ</div>
      </div>
    ))}
  </div>
</div>

<div id="imageModal" class="modal" aria-hidden="true">
  <button class="close" aria-label="Close">&times;</button>
  <img class="modal-content" id="modalImage" alt="" />
</div>

<style>
  .grid-container { max-width: 1200px; margin: 0 auto; padding: 24px; }
  .grid-header { text-align:center; margin-bottom:24px; margin-top:70px; }
  .grid-header h2 { font-size:2.4rem; font-family:inter, sans-serif; font-weight:700; }

  .uneven-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 16px 24px;
    border-radius: 12px;
    padding: 16px;
    background: #f5f5f5;
    grid-template-areas:
      "item1 item2 item2 item3"
      "item4 item4 item5 item6"
      "item7 item8 item9 item10"
      "item11 item12 item12 item13"
      "item14 item14 item14 item14";
  }

  .uneven-grid-item {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.08);
    cursor: pointer;
  }

  .uneven-grid-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display:block;
    transition: transform .28s ease;
  }
  .uneven-grid-item:hover img { transform: scale(1.04); }

  .view-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    font-size: 1.9rem;
    color: #fff;
    background: rgba(0,0,0,0.55);
    padding: 8px 10px;
    border-radius: 50%;
    opacity: 0;
    transition: opacity .2s ease, transform .2s ease;
    pointer-events: none;
  }
  .uneven-grid-item:hover .view-icon,
  .uneven-grid-item.show-icon .view-icon { opacity: 1; pointer-events: auto; transform: translate(-50%,-50%) scale(1); }

  /* Modal */
  .modal {
    display: none;
    position: fixed;
    z-index: 9999;
    inset: 0;
    background: rgba(0,0,0,0.9);
    align-items: center;
    justify-content: center;
    padding: 30px;
  }
  .modal[aria-hidden="false"] { display: flex; }
  .modal-content { max-width: 90%; max-height: 80vh; border-radius: 12px; box-shadow: 0 6px 30px rgba(0,0,0,0.6); }
  .close {
    position: absolute;
    top: 20px;
    right: 28px;
    background: transparent;
    border: none;
    color: #fff;
    font-size: 36px;
    cursor: pointer;
  }

  /* grid areas - All items now follow the main grid layout */
  .item-1 { grid-area: item1; } .item-2 { grid-area: item2; } .item-3 { grid-area: item3; }
  .item-4 { grid-area: item4; } .item-5 { grid-area: item5; } .item-6 { grid-area: item6; }
  .item-7 { grid-area: item7; } .item-8 { grid-area: item8; } .item-9 { grid-area: item9; }
  .item-10 { grid-area: item10; } .item-11 { grid-area: item11; } .item-12 { grid-area: item12; }
  .item-13 { grid-area: item13; } .item-14 { grid-area: item14; }
</style>

<script>
  (function() {
    const grid = document.querySelector('.uneven-grid');
    const modal = document.getElementById('imageModal');
    const modalImg = document.getElementById('modalImage');
    const closeBtn = modal.querySelector('.close');
    const isTouch = window.matchMedia('(hover: none)').matches;

    grid.addEventListener('click', (e) => {
      const item = e.target.closest('.uneven-grid-item');
      if (!item) return;

      const clickedIcon = e.target.closest('.view-icon');
      const srcBase = item.getAttribute('data-src') || '';

      if (clickedIcon) {
        openModal(makeModalSrc(srcBase));
        return;
      }

      if (isTouch) {
        if (!item.classList.contains('show-icon')) {
          document.querySelectorAll('.uneven-grid-item.show-icon').forEach(i => i.classList.remove('show-icon'));
          item.classList.add('show-icon');
          return;
        } else {
          openModal(makeModalSrc(srcBase));
          return;
        }
      }

      openModal(makeModalSrc(srcBase));
    });

    document.addEventListener('click', (e) => {
      if (!e.target.closest('.uneven-grid')) {
        document.querySelectorAll('.uneven-grid-item.show-icon').forEach(i => i.classList.remove('show-icon'));
      }
    });

    function openModal(src) {
      modal.setAttribute('aria-hidden','false');
      modalImg.src = src;
      document.body.style.overflow = 'hidden';
    }
    function closeModal() {
      modal.setAttribute('aria-hidden','true');
      modalImg.src = '';
      document.body.style.overflow = '';
    }

    function makeModalSrc(base) {
      return base ? `${base}&tr=w-1600,f-auto,q-auto` : '';
    }

    closeBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', (e) => { if (e.target === modal) closeModal(); });
    document.addEventListener('keydown', (e) => { if (e.key === 'Escape') closeModal(); });
  })();
</script>