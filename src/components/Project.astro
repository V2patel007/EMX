---
import Img1 from "../assets/Projectimg/1.JPG";
import Img2 from "../assets/Projectimg/2.JPG";
import Img3 from "../assets/Projectimg/3.JPG";
import Img4 from "../assets/Projectimg/4.JPG";
import Img5 from "../assets/Projectimg/5.JPG";
import Img6 from "../assets/Projectimg/6.JPG";

const images = [
  { src: Img1.src, alt: "Project Image 1" },
  { src: Img2.src, alt: "Project Image 2" },
  { src: Img3.src, alt: "Project Image 3" },
  { src: Img4.src, alt: "Project Image 4" },
  { src: Img5.src, alt: "Project Image 5" },
  { src: Img6.src, alt: "Project Image 6" }
];
---

<div class="carousel-container" id="portfolio">
  <div class="carousel-header">
    <h2>Our Portfolio</h2>
  </div>
  <div class="carousel">
    <div class="carousel-track" id="carousel-track">
      {images.map((image, index) => (
        <div class="carousel-slide" data-slide={index}>
          <img src={image.src} alt={image.alt} loading="lazy" />
        </div>
      ))}
    </div>
      
    <button class="carousel-btn carousel-btn-prev" id="prev-btn">
      <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="15,18 9,12 15,6"></polyline>
      </svg>
    </button>
      
    <button class="carousel-btn carousel-btn-next" id="next-btn">
      <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="9,18 15,12 9,6"></polyline>
      </svg>
    </button>
  </div>
</div>

<style>
  .carousel-container {
    max-width: 1100px; /* wider for desktop */
    margin: 0 auto;
    position: relative;
  }

  /* New style for the header */
  .carousel-header {
    text-align: center;
    margin-bottom: 24px;
  }

  .carousel-header h2 {
    font-size: 2.5rem;
    font-family: 'Arial', sans-serif;
    color: #2c3e50;
    font-weight: 700;
  }

  .carousel {
    position: relative;
    overflow: hidden;
    border-radius: 16px;
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.2);
    background: #f5f5f5;
  }

  .carousel-track {
    display: flex;
    transition: transform 0.5s ease;
    will-change: transform;
  }

  .carousel-slide {
    min-width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .carousel-slide img {
    width: 100%;
    height: 600px; /* increased height for desktop */
    object-fit: cover;
    display: block;
  }

  .carousel-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 2;
    transition: all 0.3s ease;
    color: #333;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  }

  .carousel-btn:hover {
    background: white;
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  }

  .carousel-btn-prev {
    left: 16px;
  }

  .carousel-btn-next {
    right: 16px;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .carousel-header h2 {
      font-size: 2rem;
    }

    .carousel-slide img {
      height: 280px; /* smaller on mobile */
    }

    .carousel-btn {
      width: 40px;
      height: 40px;
    }
  }
</style>

<script>
  class ImageCarousel {
    constructor() {
      this.track = document.getElementById('carousel-track');
      this.slides = document.querySelectorAll('.carousel-slide');
      this.nextBtn = document.getElementById('next-btn');
      this.prevBtn = document.getElementById('prev-btn');
      this.currentSlide = 0;
      this.totalSlides = this.slides.length;
      
      this.init();
    }
    
    init() {
      this.nextBtn.addEventListener('click', () => this.nextSlide());
      this.prevBtn.addEventListener('click', () => this.prevSlide());
      this.startAutoPlay();
    }
    
    nextSlide() {
      this.currentSlide = (this.currentSlide + 1) % this.totalSlides;
      this.updateSlide();
    }
    
    prevSlide() {
      this.currentSlide = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;
      this.updateSlide();
    }
    
    updateSlide() {
      const translateX = -this.currentSlide * 100;
      this.track.style.transform = `translateX(${translateX}%)`;
    }
    
    startAutoPlay() {
      setInterval(() => this.nextSlide(), 5000);
    }
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    new ImageCarousel();
  });
</script>